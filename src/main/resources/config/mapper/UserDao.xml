<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rdc.dao.UserDao">
    <resultMap id="user" type="com.rdc.entity.User" autoMapping="true">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="realname" column="realname"/>
        <result property="faceImg" column="face_img"/>
        <result property="school" column="school"/>
        <result property="phone" column="phone"/>
        <result property="birthday" column="birthday"/>
        <result property="signature" column="signature"/>
        <result property="address" column="address"/>
        <result property="visible" column="visible"/>
        <association property="permission" javaType="com.rdc.entity.Permission">
            <id property="id" column="id"/>
            <result property="permissionType" column="permission_name"/>
            <result property="pushStatus" column="p_status"/>
            <result property="loginStatus" column="l_status"/>
            <result property="pushTime" column="finish_p_time"/>
            <result property="loginTime" column="finish_l_time"/>
        </association>
    </resultMap>

    <resultMap id="friends" type="com.rdc.entity.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="faceImg" column="face_img"/>
    </resultMap>

    <resultMap id="userPWInfo" type="com.rdc.entity.User">
        <id  property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="faceImg" column="face_img"/>
        <result property="signature" column="signature"/>
    </resultMap>

    <resultMap id="userNewsBean" type="com.rdc.bean.NewsBean">
        <id  property="id" column="id"/>
        <result property="username" column="username"/>
    </resultMap>

    <resultMap id="userBean" type="com.rdc.bean.UserBean">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="face" column="face_img"/>
    </resultMap>

    <resultMap id="blog" type="com.rdc.entity.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="article" column="article"/>
        <result property="coverImg" column="cover_img"/>
        <result property="finishTime" column="finish_time"/>
    </resultMap>

    <select id="getUserInfo" parameterType="java.lang.Integer" resultMap="user">
        SELECT * FROM (SELECT user.*, permission.* FROM USER LEFT JOIN permission ON user.id = permission.user_id) temp WHERE id = #{id};
    </select>

    <select id="scanOtherMsg" parameterType="java.lang.Integer" resultMap="user">
        select user.id ,user.username, user.birthday, user.phone, user.email, user.realname, user.face_img, user.signature, user.address, user.visible from user where id=#{id}
    </select>

    <select id="getFansNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select status from relation where beliked_id = #{id} and status = 0
    </select>

    <select id="getIdolsNum" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select * from relation where user_id = #{id} and status = 0
    </select>

    <select id="findUserByUsername" parameterType="com.rdc.entity.User" resultMap="user">
        select * from user where username = #{username} and id != #{id}
    </select>

    <select id="findUser" parameterType="String" resultMap="user">
        select *from user where username like "%"#{username}"%"
    </select>

    <insert id="registe" parameterType="com.rdc.entity.User">
		insert into user(id,username,password,email)value(null,#{username},#{password},#{email})
	</insert>

    <select id="checkUsername" parameterType="com.rdc.entity.User" resultType="com.rdc.entity.User">
		select * from user where username=#{username}
	</select>

    <select id="checkEmail" parameterType="com.rdc.entity.User" resultType="com.rdc.entity.User">
		select * from user where email = #{email}
	</select>

    <select id="login" parameterType="com.rdc.entity.User" resultMap="user">
		select *from user where username=#{username} and password=#{password}
	</select>

    <select id="getUserIdByName" parameterType="java.lang.String" resultType="java.lang.Integer">
        select id from user where username=#{username}
    </select>

    <select id="findEmail" parameterType="java.lang.String" resultType="java.lang.String">
        select email from user where email=#{email}
    </select>

    <update id="resetPassword" parameterType="java.lang.String" >
        update user set password=#{password} where email=#{email}
    </update>

    <select id="findUserWatch" parameterType="int" resultType="java.lang.Integer">
        select id from relation where user_id=#{user_id} and beliked_id=#{beliked_id}
    </select>

    <insert id="watch" parameterType="int">
        insert into relation(user_id,beliked_id) values(#{user_id},#{beliked_id})
    </insert>

    <delete id="offWatch" parameterType="int">
        delete from relation where user_id=#{user_id} and beliked_id=#{beliked_id}
    </delete>

    <update id="updateUserInfo" parameterType="com.rdc.entity.User">
        update user u
        <set>
            <if test="username != null and username != ''">
                u.username = #{username},
            </if>
            <if test="birthday != null and birthday != ''">
                u.birthday = #{birthday},
            </if>
            <if test="phone != null and phone != ''">
                u.phone = #{phone},
            </if>
            <if test="faceImg != null and faceImg != ''">
                u.face_img = #{faceImg},
            </if>
            <if test="address != null and address != ''">
                u.address = #{address},
            </if>
            <if test="signature != null and signature != ''">
                u.signature = #{signature},
            </if>
            <if test="school != null and school != ''">
                u.school = #{school}
            </if>
            <if test="visible != null and visible != ''">
                u.visible = #{visible},
            </if>
            <if test="email != null and email != ''">
                u.email = #{email}
            </if>

        </set>
        where id=#{id}
    </update>

    <select id="getNiceFriends" resultType="java.lang.Integer" resultMap="friends">
      SELECT user.`id` , user.`face_img`, user.`username` FROM USER WHERE id IN (SELECT relation.`user_id` FROM relation WHERE user_id IN  (SELECT relation.`beliked_id` FROM relation WHERE user_id = #{userId} AND STATUS = 0) AND STATUS = 0 AND beliked_id = #{userId});
    </select>

    <select id="getUserPWInfo" parameterType="java.lang.Integer" resultMap="userPWInfo">
      select * from user where id = #{userId};
    </select>


    <select id="userLikeNews" parameterType="int" resultMap="userNewsBean">
        select relation.id,user.username from relation,user where relation.beliked_id = #{user_id} and+
        user.id = relation.user_id and relation.status = 1
    </select>

    <select id="getUserBlogInfo" parameterType="java.lang.Integer" resultMap="blog">
      SELECT * FROM blog WHERE user_id = #{userId} ORDER BY finish_time DESC;
    </select>


    <update id="userLikeNewsRead" parameterType="int">
        update relation set status=0 where id=#{id}
    </update>

    <select id="getUserBean" parameterType="int" resultType="com.rdc.bean.UserBean">
        select id,username,face_img as face from user where id=#{userId}
    </select>

    <update id="updateFaceImg" parameterType="map">
        update user set face_img = #{hashName} where id = #{userId};
    </update>

    <update id="readNewFans" parameterType="java.lang.Integer">
        UPDATE relation SET STATUS = 0 WHERE beliked_id = #{userId};
    </update>

    <select id="getUserFans" parameterType="java.lang.Integer" resultMap="userBean">
      SELECT user.id, user.`username`, user.`face_img` FROM USER WHERE id IN (SELECT relation.user_id FROM relation WHERE beliked_id = #{userId});
    </select>

    <select id="getUserIdols" parameterType="java.lang.Integer" resultMap="userBean">
        SELECT user.id, user.`username`, user.`face_img` FROM USER WHERE id IN (SELECT relation.beliked_id FROM relation WHERE user_id = #{userId});
    </select>
</mapper>