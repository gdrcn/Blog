<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rdc.dao.UpDao">

    <insert id="blogUp" parameterType="map">
        insert into up(user_id,beuser_id,blog_id) values(#{userId},#{beUserId},#{blogId})
    </insert>

    <delete id="blogDown" parameterType="map">
      delete from up where user_id=#{userId} and blog_id=#{blogId}
    </delete>

    <select id="isBlogUp" parameterType="map" resultType="int">
        select id from up where user_id=#{userId} and blog_id=#{blogId} limit 1;
    </select>

    <select id="blogUpCount" parameterType="int" resultType="int">
        select count(id) from up where blog_id=#{blogId}
    </select>

    <insert id="commentUp" parameterType="map">
        insert into up(user_id,beuser_id,blog_first_id) values(#{userId},#{beUserId},#{commentId})
    </insert>

    <delete id="commentDown" parameterType="map">
      delete from up where user_id=#{userId} and blog_first_id=#{commentId}
    </delete>

    <select id="isCommentUp" parameterType="map" resultType="int">
        select id from up where user_id=#{userId} and blog_first_id=#{commentId};
    </select>

    <insert id="replyUp" parameterType="map">
        insert into up(user_id,beuser_id,blog_second_id) values(#{userId},#{beUserId},#{replyId})
    </insert>

    <delete id="replyDown" parameterType="map">
      delete from up where user_id=#{userId} and blog_second_id=#{replyId}
    </delete>

    <select id="isReplyUp" parameterType="map" resultType="int">
        select id from up where user_id=#{userId} and blog_second_id=#{replyId} limit 1;
    </select>

    <select id="getReplyUpCount" parameterType="int" resultType="int">
        select count(id) from up where blog_second_id=#{replyId}
    </select>

    <select id="getCommentUpCount" parameterType="int" resultType="int">
        select count(id) from up where blog_first_id=#{commentId}
    </select>

    <select id="blogUpNews" parameterType="int" resultMap="blogNewsBean">
        select up.id,user.username,blog.title from up,user,blog where up.beuser_id = #{user_id} and up.blog_id is not null and+
        user.id = up.user_id and blog.id = up.blog_id and up.status = 1;
    </select>

    <select id="albumUpNews" parameterType="int" resultMap="albumNewsBean">
        select up.id,user.username,album.album_name from up,user,album where up.beuser_id = #{user_id} and up.album_id is not null and+
        user.id = up.user_id and album.id = up.album_id and up.status = 1;
    </select>

    <select id="commentsUpNews" parameterType="int" resultMap="blogNewsBean">
        select up.id,user.username from up,user where (blog_first_id or blog_second_id or photo_comments_id or album_comments_id is not null) and+
        user.id = up.user_id and up.beuser_id = #{user_id} and up.status = 1;
    </select>

    <select id="photoUpNews" parameterType="int" resultMap="albumNewsBean">
        select up.id,user.username from up,user where up.beuser_id = #{user_id} and up.photo_id is not null and+
        user.id = up.user_id and up.status = 1;
    </select>

    <update id="upNewsRead" parameterType="int" >
        update up set status=0 where id=#{id}
    </update>

    <resultMap id="blogNewsBean" type="com.rdc.bean.NewsBean">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="content" column="title"/>
    </resultMap>

    <resultMap id="albumNewsBean" type="com.rdc.bean.NewsBean">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="content" column="album_name"/>
    </resultMap>
</mapper>