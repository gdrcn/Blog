<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rdc.dao.BlogDao">

    <insert id="add" parameterType="com.rdc.entity.Blog">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS ID
        </selectKey>
        insert into blog(user_id,title,cover_img,article,finish_time,category) values(#{userBean.id},#{title},#{coverImg},#{article},#{finishTime},#{category})
    </insert>

    <select id="findUserId" parameterType="int" resultType="int">
        select user_id from blog where id=#{blogId}
    </select>

    <delete id="delete" parameterType="int">
        delete from blog where id=#{blogId}
    </delete>

    <update id="modify" parameterType="com.rdc.entity.Blog">
        update blog set title=#{title},article=#{article},cover_img=#{coverImg},finish_time=#{finishTime} where id=#{id}
    </update>

    <select id="findBlogById" parameterType="int" resultMap="blogMap">
        select user_id,title,cover_img,article,finish_time,username,face_img,category,t1.id as blog_id from blog as t1,user as t2 where t1.id=#{blogId} and t2.id=t1.user_id
    </select>

    <resultMap type="com.rdc.entity.Blog" id="blogMap" autoMapping="true">
        <id column="blog_id" property="id"/>
        <result column="finish_time" property="finishTime"/>
        <result column="cover_img" property="coverImg"/>
        <association property="userBean" javaType="com.rdc.bean.UserBean" autoMapping="true">
            <id column="user_id" property="id"/>
            <result column="face_img" property="face"/>
        </association>
    </resultMap>

    <select id="searchPoint" parameterType="String" resultType="com.rdc.entity.Blog">
        select id,title from blog where locate(#{input},title)>0 limit 5
    </select>

    <select id="search" parameterType="map" resultMap="blogMap">
        select user_id,title,cover_img,article,finish_time,username,face_img,category,t1.id as blog_id from blog as t1,user as t2 where locate(#{input},title)>0 and t2.id=t1.user_id limit #{begin},10
    </select>

    <select id="findBlogByUser" parameterType="map" resultMap="blogMap">
        select user_id,title,cover_img,article,finish_time,username,face_img,category,t1.id as blog_id from blog as t1,user as t2 where user_id=#{userId} and t2.id=t1.user_id limit #{begin},10
    </select>

    <select id="findBlogByCategory" parameterType="map" resultMap="blogMap">
         select user_id,title,cover_img,article,finish_time,username,face_img,category,t1.id as blog_id from blog as t1,user as t2 where t1.category=#{category} order by finish_time desc limit #{begin},10
    </select>

    <select id="findNewBlog" parameterType="int" resultType="blogMap">
        select user_id,title,cover_img,article,finish_time,username,face_img,category,t1.id as blog_id from blog as t1,user as t2 order by finish_time desc limit #{begin},10
    </select>
</mapper>