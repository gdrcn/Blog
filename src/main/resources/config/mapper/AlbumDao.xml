<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rdc.dao.AlbumDao">
    <resultMap id="album" type="com.rdc.entity.Album">
        <id property="id" column="id" />
        <result property="userId" column="user_id"/>
        <result property="albumName" column="album_name" />
        <result property="coverHash" column="cover_hash"/>
        <collection property="commentList" ofType="com.rdc.entity.Comment">
            <id property="id" column="a_id" />
            <result property="fromUserId" column="from_user_id"/>
            <result property="comments" column="comments"/>
            <result property="time" column="time"/>
            <result property="status" column="status"/>
        </collection>
    </resultMap>

    <resultMap id="basicAlbumInfo" type="com.rdc.entity.Album">
        <id property="id" column="id"/>
        <result property="albumName" column="album_name"/>
        <result property="coverHash" column="cover_hash"/>
    </resultMap>

    <resultMap id="photo" type="com.rdc.entity.Photo">
        <id property="id" column="id"/>
        <result property="albumId" column="album_id"/>
        <result property="photoHash" column="photo_hash"/>
        <result property="pushTime" column="push_time"/>
    </resultMap>

    <select id="getUserAlbumInfo" parameterType="java.lang.Integer" resultMap="album">
       SELECT album.*, album_comments.* FROM album LEFT JOIN album_comments ON album.`id`=album_comments.`album_id`;
    </select>


    <insert id="insertDefaultAlbum" parameterType="java.lang.Integer">
        insert into album(id, user_id , album_name) values(null, #{userId}, '默认相册');
    </insert>

    <select id="getDefaultAlbumIdByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select album.id from album where user_id = #{userId} and album_name = '默认相册';
    </select>
    
    <insert id="insertPhotoToAlbum" parameterType="com.rdc.entity.Photo">
      insert into photo(album_id, photo_hash,push_time) values (#{albumId}, #{photoHash}, #{pushTime});
    </insert>

    <delete id="deletePhotoByPhotoId" parameterType="java.lang.Integer">
        delete from photo where id = #{photoId}
    </delete>

    <select id="finePhotoByPhotoId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select photo.id from photo where id = #{photoId}
    </select>

    <select id="findTheSameAlbumByUserId" parameterType="com.rdc.entity.Album" resultType="java.lang.Integer">
        select album.id from album where album_name = #{albumName} and user_id = #{userId}
    </select>

    <insert id="insertNewAlbum" parameterType="com.rdc.entity.Album">
        insert into album(id, user_id, album_name) values (null, #{userId}, #{albumName})
    </insert>

    <select id="getUserAlbumList" parameterType="java.lang.Integer" resultMap="basicAlbumInfo">
      select * from album where user_id = #{userId}
    </select>

    <select id="getUserAllPhoto" parameterType="java.lang.Integer" resultMap="photo">
        SELECT * FROM photo WHERE album_id IN (SELECT album.`id` FROM album WHERE user_id = #{userId}) ORDER BY push_time DESC;
    </select>


    <select id="getSpecificPhoto" parameterType="java.lang.Integer" resultMap="photo">
        select * from photo where album_id = #{albumId} order by push_time DESC;
    </select>

    <delete id="deleteAlbum" parameterType="com.rdc.entity.Album">
        delete from album where id = #{id};
    </delete>
</mapper>